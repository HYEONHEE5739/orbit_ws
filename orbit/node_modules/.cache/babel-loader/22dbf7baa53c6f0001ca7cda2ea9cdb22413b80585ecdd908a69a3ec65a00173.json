{"ast":null,"code":"var _jsxFileName = \"/home/rokey/orbit/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport ArtworkList from \"./components/ArtworkList\";\nimport ArtworkDetail from \"./components/ArtworkDetail\";\nimport GlobalStyle from \"./styles/GlobalStyle\";\nimport client from \"./mqttClient\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [step, setStep] = useState(\"mode\"); // 현재 화면 단계\n  const [selectedArtwork, setSelectedArtwork] = useState(null); // 선택된 작품\n  const [floor, setFloor] = useState(1); // 현재 사람이 있는 층\n  const [personDetected, setPersonDetected] = useState(false); // 사람 인식 여부\n  const [detected, setDetected] = useState(false); // /robot2/artwork_detected\n  const [arrived, setArrived] = useState(false); // 🔹 /robot2|3/arrived\n  const [gohomeSent, setGohomeSent] = useState(false);\n  const [artworkDetectedFlag, setArtworkDetectedFlag] = useState(false);\n  const [arrivedPaintingFlag, setArrivedPaintingFlag] = useState(false);\n\n  // 최신 선택작품 참조용 ref (메시지 핸들러에서 최신값 사용)\n  const selectedRef = useRef(null);\n  useEffect(() => {\n    selectedRef.current = selectedArtwork;\n  }, [selectedArtwork]);\n\n  // MQTT payload → boolean 파서\n  const parseBoolPayload = payload => {\n    if (payload && typeof payload.length === \"number\") {\n      if (payload.length === 1 && (payload[0] === 0 || payload[0] === 1)) {\n        return payload[0] === 1;\n      }\n    }\n    try {\n      const txt = new TextDecoder().decode(payload).trim().toLowerCase();\n      if (txt === \"true\" || txt === \"1\") return true;\n      if (txt === \"false\" || txt === \"0\") return false;\n      const obj = JSON.parse(txt);\n      if (typeof obj === \"boolean\") return obj;\n      if (obj && typeof obj.detected === \"boolean\") return obj.detected;\n      if (obj && typeof obj.arrived === \"boolean\") return obj.arrived;\n    } catch (_) {}\n    return false;\n  };\n  const tryEnterDetail = useCallback(() => {\n    if (selectedRef.current && artworkDetectedFlag && arrivedPaintingFlag) {\n      setDetected(true); // 본문 표시\n      setStep(prev => prev === \"detail\" ? prev : \"detail\"); // detail 아니면 전환\n    }\n  }, [artworkDetectedFlag, arrivedPaintingFlag]);\n\n  // 구독: 한 번만\n  useEffect(() => {\n    // 🔹 도착 토픽 포함\n    client.subscribe(\"/robot2/arrived\", err => err ? console.error(\"❌ /robot2/arrived 구독 실패\", err) : console.log(\"📡 /robot2/arrived 구독 성공\"));\n    client.subscribe(\"/robot3/arrived\", err => err ? console.error(\"❌ /robot3/arrived 구독 실패\", err) : console.log(\"📡 /robot3/arrived 구독 성공\"));\n    client.subscribe(\"/robot2/artwork_detected\", err => err ? console.error(\"❌ /robot2/artwork_detected 구독 실패\", err) : console.log(\"📡 /robot2/artwork_detected 구독 성공\"));\n    client.subscribe(\"/robot2/arrived_painting\", err => err ? console.error(\"❌ /robot2/arrived_painting 구독 실패\", err) : console.log(\"📡 /robot2/arrived_painting 구독 성공\"));\n    client.subscribe(\"/robot2/person_detected\", err => err ? console.error(\"❌ /robot2/person_detected 구독 실패\", err) : console.log(\"📡 /robot2/person_detected 구독 성공\"));\n    const onMessage = (topic, payload) => {\n      // 🔹 도착 토픽 처리\n      if (topic === \"/robot2/arrived\" || topic === \"/robot3/arrived\") {\n        const isArrived = parseBoolPayload(payload);\n        console.log(`📥 ${topic} =`, isArrived);\n        setArrived(isArrived); // 화면 전환은 여기서 하지 않음\n        return;\n      }\n      if (topic === \"/robot2/artwork_detected\") {\n        const ok = parseBoolPayload(payload);\n        console.log(\"📥 /robot2/artwork_detected =\", ok);\n        setArtworkDetectedFlag(!!ok);\n        // 둘 다 true 되기 전까지는 '이동 중' 유지\n        if (!ok) setDetected(false);\n        tryEnterDetail();\n        return;\n      }\n      if (topic === \"/robot2/person_detected\") {\n        const v = parseBoolPayload(payload);\n        console.log(\"📥 /robot2/person_detected =\", v);\n        setPersonDetected(v);\n        if (v && !gohomeSent) {\n          const one = Uint8Array.from([1]); // 1바이트 불린\n          client.publish(\"/robot3/gohome\", one);\n          console.log(\"📤 /robot3/gohome → <0x01>\");\n          setGohomeSent(true);\n        }\n        // (선택) 인식 해제되면 플래그 리셋해서 다음에 다시 보낼 수 있게 함\n        if (!v && gohomeSent) {\n          setGohomeSent(false);\n        }\n        return;\n      }\n    };\n    client.on(\"message\", onMessage);\n    return () => client.off(\"message\", onMessage);\n  }, []);\n  const handleModeSelect = mode => {\n    if (mode === \"맞춤 관람\") setStep(\"list\");else alert(\"전체 관람 모드는 현재 준비 중입니다.\");\n  };\n\n  // 층 변경시 /floor_changed = 1바이트 불린(0x01/0x00) 발행\n  const publishFloorChangedFlag = changed => {\n    const buf = Uint8Array.from([changed ? 1 : 0]); // 1=true, 0=false\n    client.publish(\"/floor_changed\", buf);\n    console.log(\"📤 /floor_changed →\", changed ? \"<0x01>\" : \"<0x00>\");\n  };\n  const handleSelect = art => {\n    // 새 작품 선택 시 이전 상태 초기화\n    setDetected(false);\n    setArrived(false); // 🔹 새 이동 시작 → 아직 도착 안 함\n\n    if (art.floor !== floor) {\n      if (window.confirm(`${art.floor}층으로 이동할까요?`)) {\n        publishFloorChangedFlag(true);\n        setFloor(art.floor);\n        const message = String(art.id);\n        client.publish(\"/robot3/artwork_id\", message);\n        client.publish(\"/robot2/artwork_id\", message);\n        console.log(\"📤 /robot3/artwork_id →\", message);\n        console.log(\"📤 /robot2/artwork_id →\", message);\n\n        // 화면 전환은 MQTT 인식 신호를 기다림\n        setSelectedArtwork(art);\n        selectedRef.current = art;\n        setStep(\"detail\");\n      }\n    } else {\n      const message = String(art.id);\n      client.publish(\"/robot3/artwork_id\", message);\n      client.publish(\"/robot2/artwork_id\", message);\n      console.log(\"📤 /robot3/artwork_id →\", message);\n      console.log(\"📤 /robot2/artwork_id →\", message);\n      setSelectedArtwork(art); // 전환은 인식 신호가 오면 수행\n      selectedRef.current = art;\n      setStep(\"detail\");\n    }\n  };\n  const handleDone = () => setStep(\"more\"); // 필요 시 \"list\" 등으로 변경\n\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"ORBIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), step === \"mode\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n          children: \"\\uAD00\\uB78C \\uBC29\\uBC95\\uC744 \\uC120\\uD0DD\\uD574 \\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModeSelectContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleModeSelect(\"전체 관람\"),\n            children: \"\\uC804\\uCCB4 \\uAD00\\uB78C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleModeSelect(\"맞춤 관람\"),\n            children: \"\\uB9DE\\uCDA4 \\uAD00\\uB78C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), step === \"list\" && /*#__PURE__*/_jsxDEV(ArtworkList, {\n        onSelect: handleSelect,\n        floor: floor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), step === \"detail\" && /*#__PURE__*/_jsxDEV(ArtworkDetail, {\n        artwork: selectedArtwork,\n        onDone: handleDone,\n        detected: detected // 🔹 arrived 대신 detected로 제어\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Bz4bJu2kYv2m4aCROW7/WAh8yTE=\");\n_c = App;\nexport default App;\n\n// (스타일은 기존 그대로)\n\nconst AppContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: #f8f8f8;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding-top: 15vh;\n`;\n_c2 = AppContainer;\nconst Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n_c3 = Layout;\nconst Title = styled.h1`\n  font-size: 5rem;\n  color: #222;\n  margin-bottom: 8vh; \n  letter-spacing: 0.1rem; \n`;\n_c4 = Title;\nconst Subtitle = styled.h2`\n  font-size: 2.5rem;\n  margin-bottom: 6vh;\n`;\n_c5 = Subtitle;\nconst ModeSelectContainer = styled.div`\n  display: flex;\n  gap: 10rem;\n  margin-top: 3vh; \n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n_c6 = ModeSelectContainer;\nconst Button = styled.button`\n  font-size: 2rem;\n  padding: 2rem 3.5rem;  \n  border-radius: 16px;   \n  border: none;\n  background-color: #333;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #555;\n  }\n\n  &:active {\n    background-color: #111;\n  }\n`;\n_c7 = Button;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"Layout\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Subtitle\");\n$RefreshReg$(_c6, \"ModeSelectContainer\");\n$RefreshReg$(_c7, \"Button\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","styled","ArtworkList","ArtworkDetail","GlobalStyle","client","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","step","setStep","selectedArtwork","setSelectedArtwork","floor","setFloor","personDetected","setPersonDetected","detected","setDetected","arrived","setArrived","gohomeSent","setGohomeSent","artworkDetectedFlag","setArtworkDetectedFlag","arrivedPaintingFlag","setArrivedPaintingFlag","selectedRef","current","parseBoolPayload","payload","length","txt","TextDecoder","decode","trim","toLowerCase","obj","JSON","parse","_","tryEnterDetail","prev","subscribe","err","console","error","log","onMessage","topic","isArrived","ok","v","one","Uint8Array","from","publish","on","off","handleModeSelect","mode","alert","publishFloorChangedFlag","changed","buf","handleSelect","art","window","confirm","message","String","id","handleDone","AppContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","Layout","Title","Subtitle","ModeSelectContainer","Button","onClick","onSelect","artwork","onDone","_c","div","_c2","_c3","h1","_c4","h2","_c5","_c6","button","_c7","$RefreshReg$"],"sources":["/home/rokey/orbit/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport ArtworkList from \"./components/ArtworkList\";\nimport ArtworkDetail from \"./components/ArtworkDetail\";\nimport GlobalStyle from \"./styles/GlobalStyle\";\nimport client from \"./mqttClient\";\n\nfunction App() {\n  const [step, setStep] = useState(\"mode\");                 // 현재 화면 단계\n  const [selectedArtwork, setSelectedArtwork] = useState(null); // 선택된 작품\n  const [floor, setFloor] = useState(1);                    // 현재 사람이 있는 층\n  const [personDetected, setPersonDetected] = useState(false); // 사람 인식 여부\n  const [detected, setDetected] = useState(false);          // /robot2/artwork_detected\n  const [arrived, setArrived] = useState(false);            // 🔹 /robot2|3/arrived\n  const [gohomeSent, setGohomeSent] = useState(false);\n  const [artworkDetectedFlag, setArtworkDetectedFlag] = useState(false);\n  const [arrivedPaintingFlag, setArrivedPaintingFlag] = useState(false);\n\n\n  // 최신 선택작품 참조용 ref (메시지 핸들러에서 최신값 사용)\n  const selectedRef = useRef(null);\n  useEffect(() => { selectedRef.current = selectedArtwork; }, [selectedArtwork]);\n\n  // MQTT payload → boolean 파서\n  const parseBoolPayload = (payload) => {\n    if (payload && typeof payload.length === \"number\") {\n      if (payload.length === 1 && (payload[0] === 0 || payload[0] === 1)) {\n        return payload[0] === 1;\n      }\n    }\n    try {\n      const txt = new TextDecoder().decode(payload).trim().toLowerCase();\n      if (txt === \"true\" || txt === \"1\") return true;\n      if (txt === \"false\" || txt === \"0\") return false;\n      const obj = JSON.parse(txt);\n      if (typeof obj === \"boolean\") return obj;\n      if (obj && typeof obj.detected === \"boolean\") return obj.detected;\n      if (obj && typeof obj.arrived === \"boolean\") return obj.arrived;\n    } catch (_) {}\n    return false;\n  };\n\n  const tryEnterDetail = useCallback(() => {\n    if (selectedRef.current && artworkDetectedFlag && arrivedPaintingFlag) {\n      setDetected(true); // 본문 표시\n      setStep((prev) => (prev === \"detail\" ? prev : \"detail\")); // detail 아니면 전환\n    }\n  }, [artworkDetectedFlag, arrivedPaintingFlag]);\n\n  // 구독: 한 번만\n  useEffect(() => {\n    // 🔹 도착 토픽 포함\n    client.subscribe(\"/robot2/arrived\", (err) =>\n      err ? console.error(\"❌ /robot2/arrived 구독 실패\", err)\n          : console.log(\"📡 /robot2/arrived 구독 성공\")\n    );\n    client.subscribe(\"/robot3/arrived\", (err) =>\n      err ? console.error(\"❌ /robot3/arrived 구독 실패\", err)\n          : console.log(\"📡 /robot3/arrived 구독 성공\")\n    );\n    client.subscribe(\"/robot2/artwork_detected\", (err) =>\n      err ? console.error(\"❌ /robot2/artwork_detected 구독 실패\", err)\n          : console.log(\"📡 /robot2/artwork_detected 구독 성공\")\n    );\n    client.subscribe(\"/robot2/arrived_painting\", (err) =>\n      err ? console.error(\"❌ /robot2/arrived_painting 구독 실패\", err)\n          : console.log(\"📡 /robot2/arrived_painting 구독 성공\")\n    );\n    client.subscribe(\"/robot2/person_detected\", (err) =>\n      err ? console.error(\"❌ /robot2/person_detected 구독 실패\", err)\n          : console.log(\"📡 /robot2/person_detected 구독 성공\")\n    );\n\n    const onMessage = (topic, payload) => {\n      // 🔹 도착 토픽 처리\n      if (topic === \"/robot2/arrived\" || topic === \"/robot3/arrived\") {\n        const isArrived = parseBoolPayload(payload);\n        console.log(`📥 ${topic} =`, isArrived);\n        setArrived(isArrived);             // 화면 전환은 여기서 하지 않음\n        return;\n      }\n\n      if (topic === \"/robot2/artwork_detected\") {\n        const ok = parseBoolPayload(payload);\n        console.log(\"📥 /robot2/artwork_detected =\", ok);\n        setArtworkDetectedFlag(!!ok);\n        // 둘 다 true 되기 전까지는 '이동 중' 유지\n        if (!ok) setDetected(false);\n        tryEnterDetail();\n        return;\n      }\n\n      if (topic === \"/robot2/person_detected\") {\n        const v = parseBoolPayload(payload);\n        console.log(\"📥 /robot2/person_detected =\", v);\n        setPersonDetected(v);\n\n        if (v && !gohomeSent) {\n          const one = Uint8Array.from([1]); // 1바이트 불린\n          client.publish(\"/robot3/gohome\", one);\n          console.log(\"📤 /robot3/gohome → <0x01>\");\n          setGohomeSent(true);\n        }\n        // (선택) 인식 해제되면 플래그 리셋해서 다음에 다시 보낼 수 있게 함\n        if (!v && gohomeSent) {\n          setGohomeSent(false);\n        }\n        return;\n      }\n    };\n\n    client.on(\"message\", onMessage);\n    return () => client.off(\"message\", onMessage);\n  }, []);\n\n  const handleModeSelect = (mode) => {\n    if (mode === \"맞춤 관람\") setStep(\"list\");\n    else alert(\"전체 관람 모드는 현재 준비 중입니다.\");\n  };\n\n  // 층 변경시 /floor_changed = 1바이트 불린(0x01/0x00) 발행\n  const publishFloorChangedFlag = (changed) => {\n    const buf = Uint8Array.from([changed ? 1 : 0]); // 1=true, 0=false\n    client.publish(\"/floor_changed\", buf);\n    console.log(\"📤 /floor_changed →\", changed ? \"<0x01>\" : \"<0x00>\");\n  };\n\n  const handleSelect = (art) => {\n    // 새 작품 선택 시 이전 상태 초기화\n    setDetected(false);\n    setArrived(false); // 🔹 새 이동 시작 → 아직 도착 안 함\n\n    if (art.floor !== floor) {\n      if (window.confirm(`${art.floor}층으로 이동할까요?`)) {\n        publishFloorChangedFlag(true);\n        setFloor(art.floor);\n\n        const message = String(art.id);\n        client.publish(\"/robot3/artwork_id\", message);\n        client.publish(\"/robot2/artwork_id\", message);\n        console.log(\"📤 /robot3/artwork_id →\", message);\n        console.log(\"📤 /robot2/artwork_id →\", message);\n\n        // 화면 전환은 MQTT 인식 신호를 기다림\n        setSelectedArtwork(art);\n        selectedRef.current = art;\n        setStep(\"detail\");\n      }\n    } else {\n      const message = String(art.id);\n      client.publish(\"/robot3/artwork_id\", message);\n      client.publish(\"/robot2/artwork_id\", message);\n      console.log(\"📤 /robot3/artwork_id →\", message);\n      console.log(\"📤 /robot2/artwork_id →\", message);\n\n      setSelectedArtwork(art); // 전환은 인식 신호가 오면 수행\n      selectedRef.current = art;\n      setStep(\"detail\");\n    }\n  };\n\n  const handleDone = () => setStep(\"more\"); // 필요 시 \"list\" 등으로 변경\n  \n  return (\n    <AppContainer>\n      <GlobalStyle />\n      <Layout>\n        <Title>ORBIT</Title>\n\n        {step === \"mode\" && (\n          <>\n            <Subtitle>관람 방법을 선택해 주세요</Subtitle>\n            <ModeSelectContainer>\n              <Button onClick={() => handleModeSelect(\"전체 관람\")}>전체 관람</Button>\n              <Button onClick={() => handleModeSelect(\"맞춤 관람\")}>맞춤 관람</Button>\n            </ModeSelectContainer>\n          </>\n        )}\n\n        {step === \"list\" && (\n          <ArtworkList onSelect={handleSelect} floor={floor} />\n        )}\n\n        {step === \"detail\" && (\n          <ArtworkDetail\n            artwork={selectedArtwork}\n            onDone={handleDone}\n            detected={detected}    // 🔹 arrived 대신 detected로 제어\n          />\n        )}\n      </Layout>\n    </AppContainer>\n  );\n}\n\nexport default App;\n\n// (스타일은 기존 그대로)\n\nconst AppContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: #f8f8f8;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding-top: 15vh;\n`;\n\nconst Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Title = styled.h1`\n  font-size: 5rem;\n  color: #222;\n  margin-bottom: 8vh; \n  letter-spacing: 0.1rem; \n`;\n\nconst Subtitle = styled.h2`\n  font-size: 2.5rem;\n  margin-bottom: 6vh;\n`;\n\nconst ModeSelectContainer = styled.div`\n  display: flex;\n  gap: 10rem;\n  margin-top: 3vh; \n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst Button = styled.button`\n  font-size: 2rem;\n  padding: 2rem 3.5rem;  \n  border-radius: 16px;   \n  border: none;\n  background-color: #333;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #555;\n  }\n\n  &:active {\n    background-color: #111;\n  }\n`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}