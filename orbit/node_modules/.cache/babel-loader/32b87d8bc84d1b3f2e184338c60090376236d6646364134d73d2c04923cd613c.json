{"ast":null,"code":"var _jsxFileName = \"/home/rokey/orbit/src/components/ArtworkDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { sendArtworkTarget } from \"../api/sendTarget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArtworkDetail({\n  artwork,\n  onDone\n}) {\n  _s();\n  const [status, setStatus] = useState(\"이동 중...\");\n  useEffect(() => {\n    // 선택된 artwork 좌표를 서버로 전송\n    sendArtworkTarget(artwork).then(() => {\n      // 아래는 YOLO 90% 검출 확인했다고 가정 (실제론 WebSocket으로 처리 추천)\n      setTimeout(() => {\n        setStatus(\"작품 감지 완료! 설명 중...\");\n        setTimeout(() => {\n          setStatus(\"설명이 끝났습니다.\");\n          onDone();\n        }, 4000); // 설명 시간\n      }, 5000); // 이동 및 인식 시간\n    });\n  }, [artwork, onDone]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: artwork.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(ArtworkDetail, \"G3cDUFHXVpB+G+ZP/4dgbBdGLeM=\");\n_c = ArtworkDetail;\nexport default ArtworkDetail;\nvar _c;\n$RefreshReg$(_c, \"ArtworkDetail\");","map":{"version":3,"names":["React","useEffect","useState","sendArtworkTarget","jsxDEV","_jsxDEV","ArtworkDetail","artwork","onDone","_s","status","setStatus","then","setTimeout","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rokey/orbit/src/components/ArtworkDetail.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { sendArtworkTarget } from \"../api/sendTarget\";\n\nfunction ArtworkDetail({ artwork, onDone }) {\n  const [status, setStatus] = useState(\"이동 중...\");\n\n  useEffect(() => {\n    // 선택된 artwork 좌표를 서버로 전송\n    sendArtworkTarget(artwork).then(() => {\n      // 아래는 YOLO 90% 검출 확인했다고 가정 (실제론 WebSocket으로 처리 추천)\n      setTimeout(() => {\n        setStatus(\"작품 감지 완료! 설명 중...\");\n        setTimeout(() => {\n          setStatus(\"설명이 끝났습니다.\");\n          onDone();\n        }, 4000); // 설명 시간\n      }, 5000); // 이동 및 인식 시간\n    });\n  }, [artwork, onDone]);\n\n  return (\n    <div>\n      <h2>{artwork.name}</h2>\n      <p>{status}</p>\n    </div>\n  );\n}\n\nexport default ArtworkDetail;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,aAAaA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,SAAS,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd;IACAE,iBAAiB,CAACI,OAAO,CAAC,CAACK,IAAI,CAAC,MAAM;MACpC;MACAC,UAAU,CAAC,MAAM;QACfF,SAAS,CAAC,mBAAmB,CAAC;QAC9BE,UAAU,CAAC,MAAM;UACfF,SAAS,CAAC,YAAY,CAAC;UACvBH,MAAM,CAAC,CAAC;QACV,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC;EACJ,CAAC,EAAE,CAACD,OAAO,EAAEC,MAAM,CAAC,CAAC;EAErB,oBACEH,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAKP,OAAO,CAACQ;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBd,OAAA;MAAAS,QAAA,EAAIJ;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACV,EAAA,CAvBQH,aAAa;AAAAc,EAAA,GAAbd,aAAa;AAyBtB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}