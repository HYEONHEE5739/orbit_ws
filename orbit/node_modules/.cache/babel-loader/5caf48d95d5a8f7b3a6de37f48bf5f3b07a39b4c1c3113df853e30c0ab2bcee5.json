{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useSocket.js (예시)\nimport { useEffect, useRef } from 'react';\nexport default function useSocket(onMessage) {\n  _s();\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = new WebSocket('ws://192.168.0.49:/ws');\n    socket.current.onopen = () => {\n      console.log(\"✅ WebSocket connected\");\n    };\n    socket.current.onmessage = event => {\n      const data = JSON.parse(event.data);\n      onMessage(data);\n    };\n    socket.current.onerror = e => {\n      console.error(\"WebSocket error:\", e);\n    };\n    socket.current.onclose = () => {\n      console.log(\"WebSocket closed\");\n    };\n    return () => socket.current && socket.current.close();\n  }, [onMessage]);\n  const send = data => {\n    var _socket$current;\n    if (((_socket$current = socket.current) === null || _socket$current === void 0 ? void 0 : _socket$current.readyState) === WebSocket.OPEN) {\n      socket.current.send(JSON.stringify(data));\n    }\n  };\n  return {\n    send\n  };\n}\n_s(useSocket, \"tT+TUeqDasSnJe6iF3dKYibtzxk=\");","map":{"version":3,"names":["useEffect","useRef","useSocket","onMessage","_s","socket","current","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","onerror","e","error","onclose","close","send","_socket$current","readyState","OPEN","stringify"],"sources":["/home/rokey/orbit/src/hooks/useSocket.js"],"sourcesContent":["// src/hooks/useSocket.js (예시)\nimport { useEffect, useRef } from 'react';\n\nexport default function useSocket(onMessage) {\n  const socket = useRef(null);\n\n  useEffect(() => {\n    socket.current = new WebSocket('ws://192.168.0.49:/ws');\n\n    socket.current.onopen = () => {\n      console.log(\"✅ WebSocket connected\");\n    };\n\n    socket.current.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      onMessage(data);\n    };\n\n    socket.current.onerror = (e) => {\n      console.error(\"WebSocket error:\", e);\n    };\n\n    socket.current.onclose = () => {\n      console.log(\"WebSocket closed\");\n    };\n\n    return () => socket.current && socket.current.close();\n  }, [onMessage]);\n\n  const send = (data) => {\n    if (socket.current?.readyState === WebSocket.OPEN) {\n      socket.current.send(JSON.stringify(data));\n    }\n  };\n\n  return { send };\n}\n"],"mappings":";AAAA;AACA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,eAAe,SAASC,SAASA,CAACC,SAAS,EAAE;EAAAC,EAAA;EAC3C,MAAMC,MAAM,GAAGJ,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACdK,MAAM,CAACC,OAAO,GAAG,IAAIC,SAAS,CAAC,uBAAuB,CAAC;IAEvDF,MAAM,CAACC,OAAO,CAACE,MAAM,GAAG,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC,CAAC;IAEDL,MAAM,CAACC,OAAO,CAACK,SAAS,GAAIC,KAAK,IAAK;MACpC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnCV,SAAS,CAACU,IAAI,CAAC;IACjB,CAAC;IAEDR,MAAM,CAACC,OAAO,CAACU,OAAO,GAAIC,CAAC,IAAK;MAC9BR,OAAO,CAACS,KAAK,CAAC,kBAAkB,EAAED,CAAC,CAAC;IACtC,CAAC;IAEDZ,MAAM,CAACC,OAAO,CAACa,OAAO,GAAG,MAAM;MAC7BV,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAED,OAAO,MAAML,MAAM,CAACC,OAAO,IAAID,MAAM,CAACC,OAAO,CAACc,KAAK,CAAC,CAAC;EACvD,CAAC,EAAE,CAACjB,SAAS,CAAC,CAAC;EAEf,MAAMkB,IAAI,GAAIR,IAAI,IAAK;IAAA,IAAAS,eAAA;IACrB,IAAI,EAAAA,eAAA,GAAAjB,MAAM,CAACC,OAAO,cAAAgB,eAAA,uBAAdA,eAAA,CAAgBC,UAAU,MAAKhB,SAAS,CAACiB,IAAI,EAAE;MACjDnB,MAAM,CAACC,OAAO,CAACe,IAAI,CAACP,IAAI,CAACW,SAAS,CAACZ,IAAI,CAAC,CAAC;IAC3C;EACF,CAAC;EAED,OAAO;IAAEQ;EAAK,CAAC;AACjB;AAACjB,EAAA,CAjCuBF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}