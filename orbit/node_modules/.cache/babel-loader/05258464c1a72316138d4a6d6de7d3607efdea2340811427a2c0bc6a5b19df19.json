{"ast":null,"code":"var _jsxFileName = \"/home/rokey/orbit/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ArtworkList from \"./components/ArtworkList\";\nimport ArtworkDetail from \"./components/ArtworkDetail\";\nimport GlobalStyle from \"./styles/GlobalStyle\";\nimport client from \"./mqttClient\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [step, setStep] = useState(\"mode\");\n  const [selectedArtwork, setSelectedArtwork] = useState(null);\n  const [floor, setFloor] = useState(1); // 현재 사람이 있는 층 (초기: 1층)\n\n  const handleModeSelect = mode => {\n    if (mode === \"맞춤 관람\") setStep(\"list\");else alert(\"전체 관람 모드는 현재 준비 중입니다.\");\n  };\n\n  // ✅ 층 변경시 /floor_changed = \"true\" 발행\n  const publishFloorChangedFlag = changed => {\n    const buf = Uint8Array.from([changed ? 1 : 0]); // 1=true, 0=false\n    client.publish(\"/floor_changed\", buf);\n    console.log(\"📤 MQTT 발행: /floor_changed →\", changed ? \"<0x01>\" : \"<0x00>\");\n  };\n  const handleSelect = art => {\n    // 작품이 있는 층과 현재 사람이 있는 층 비교\n    if (art.floor !== floor) {\n      if (window.confirm(`${art.floor}층으로 이동할까요?`)) {\n        // ✅ 층 변경 이벤트 먼저 발행\n        publishFloorChanged(floor, art.floor);\n\n        // 층 상태 갱신\n        setFloor(art.floor);\n\n        // 작품 ID를 문자열로 발행 (예: \"1\")\n        const message = String(art.id);\n        client.publish(\"/robot3/artwork_id\", message);\n        console.log(\"📤 MQTT 발행: /robot3/artwork_id →\", message);\n\n        // 상세 화면으로 이동\n        setSelectedArtwork(art);\n        setStep(\"detail\");\n      }\n    } else {\n      // 같은 층이면 바로 발행 후 상세로 이동\n      const message = String(art.id);\n      client.publish(\"/robot3/artwork_id\", message);\n      console.log(\"📤 MQTT 발행: /robot3/artwork_id →\", message);\n      setSelectedArtwork(art);\n      setStep(\"detail\");\n    }\n  };\n  const handleDone = () => setStep(\"more\");\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"ORBIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), step === \"mode\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n          children: \"\\uAD00\\uB78C \\uBC29\\uBC95\\uC744 \\uC120\\uD0DD\\uD574 \\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModeSelectContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleModeSelect(\"전체 관람\"),\n            children: \"\\uC804\\uCCB4 \\uAD00\\uB78C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleModeSelect(\"맞춤 관람\"),\n            children: \"\\uB9DE\\uCDA4 \\uAD00\\uB78C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), step === \"list\" && /*#__PURE__*/_jsxDEV(ArtworkList, {\n        onSelect: handleSelect,\n        floor: floor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }, this), step === \"detail\" && /*#__PURE__*/_jsxDEV(ArtworkDetail, {\n        artwork: selectedArtwork,\n        onDone: handleDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MrAx50Env/ATnCgDESiD9ERxamk=\");\n_c = App;\nexport default App;\n\n// (스타일은 기존 그대로)\n\nconst AppContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: #f8f8f8;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding-top: 15vh;\n`;\n_c2 = AppContainer;\nconst Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n_c3 = Layout;\nconst Title = styled.h1`\n  font-size: 5rem;\n  color: #222;\n  margin-bottom: 8vh; \n  letter-spacing: 0.1rem; \n`;\n_c4 = Title;\nconst Subtitle = styled.h2`\n  font-size: 2.5rem;\n  margin-bottom: 6vh;\n`;\n_c5 = Subtitle;\nconst ModeSelectContainer = styled.div`\n  display: flex;\n  gap: 10rem;\n  margin-top: 3vh; \n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n_c6 = ModeSelectContainer;\nconst Button = styled.button`\n  font-size: 2rem;\n  padding: 2rem 3.5rem;  \n  border-radius: 16px;   \n  border: none;\n  background-color: #333;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #555;\n  }\n\n  &:active {\n    background-color: #111;\n  }\n`;\n_c7 = Button;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"Layout\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Subtitle\");\n$RefreshReg$(_c6, \"ModeSelectContainer\");\n$RefreshReg$(_c7, \"Button\");","map":{"version":3,"names":["React","useState","styled","ArtworkList","ArtworkDetail","GlobalStyle","client","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","step","setStep","selectedArtwork","setSelectedArtwork","floor","setFloor","handleModeSelect","mode","alert","publishFloorChangedFlag","changed","buf","Uint8Array","from","publish","console","log","handleSelect","art","window","confirm","publishFloorChanged","message","String","id","handleDone","AppContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","Layout","Title","Subtitle","ModeSelectContainer","Button","onClick","onSelect","artwork","onDone","_c","div","_c2","_c3","h1","_c4","h2","_c5","_c6","button","_c7","$RefreshReg$"],"sources":["/home/rokey/orbit/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport ArtworkList from \"./components/ArtworkList\";\nimport ArtworkDetail from \"./components/ArtworkDetail\";\nimport GlobalStyle from \"./styles/GlobalStyle\";\nimport client from \"./mqttClient\";\n\nfunction App() {\n  const [step, setStep] = useState(\"mode\");  \n  const [selectedArtwork, setSelectedArtwork] = useState(null);\n  const [floor, setFloor] = useState(1);  // 현재 사람이 있는 층 (초기: 1층)\n\n  const handleModeSelect = (mode) => {\n    if (mode === \"맞춤 관람\") setStep(\"list\");\n    else alert(\"전체 관람 모드는 현재 준비 중입니다.\");\n  };\n\n  // ✅ 층 변경시 /floor_changed = \"true\" 발행\n  const publishFloorChangedFlag = (changed) => {\n    const buf = Uint8Array.from([changed ? 1 : 0]); // 1=true, 0=false\n    client.publish(\"/floor_changed\", buf);\n    console.log(\"📤 MQTT 발행: /floor_changed →\", changed ? \"<0x01>\" : \"<0x00>\");\n  };\n\n  const handleSelect = (art) => {\n    // 작품이 있는 층과 현재 사람이 있는 층 비교\n    if (art.floor !== floor) {\n      if (window.confirm(`${art.floor}층으로 이동할까요?`)) {\n        // ✅ 층 변경 이벤트 먼저 발행\n        publishFloorChanged(floor, art.floor);\n\n        // 층 상태 갱신\n        setFloor(art.floor);\n\n        // 작품 ID를 문자열로 발행 (예: \"1\")\n        const message = String(art.id);\n        client.publish(\"/robot3/artwork_id\", message);\n        console.log(\"📤 MQTT 발행: /robot3/artwork_id →\", message);\n\n        // 상세 화면으로 이동\n        setSelectedArtwork(art);\n        setStep(\"detail\");\n      }\n    } else {\n      // 같은 층이면 바로 발행 후 상세로 이동\n      const message = String(art.id);\n      client.publish(\"/robot3/artwork_id\", message);\n      console.log(\"📤 MQTT 발행: /robot3/artwork_id →\", message);\n\n      setSelectedArtwork(art);\n      setStep(\"detail\");\n    }\n  };\n\n  const handleDone = () => setStep(\"more\");\n\n  return (\n    <AppContainer>\n      <GlobalStyle />\n      <Layout>\n        <Title>ORBIT</Title>\n        {step === \"mode\" && (\n          <>\n            <Subtitle>관람 방법을 선택해 주세요</Subtitle>\n            <ModeSelectContainer>\n              <Button onClick={() => handleModeSelect(\"전체 관람\")}>전체 관람</Button>\n              <Button onClick={() => handleModeSelect(\"맞춤 관람\")}>맞춤 관람</Button>\n            </ModeSelectContainer>\n          </>\n        )}\n        {step === \"list\" && <ArtworkList onSelect={handleSelect} floor={floor} />}\n        {step === \"detail\" && <ArtworkDetail artwork={selectedArtwork} onDone={handleDone} />}\n      </Layout>\n    </AppContainer>\n  );\n}\n\nexport default App;\n\n// (스타일은 기존 그대로)\n\nconst AppContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: #f8f8f8;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  padding-top: 15vh;\n`;\n\nconst Layout = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Title = styled.h1`\n  font-size: 5rem;\n  color: #222;\n  margin-bottom: 8vh; \n  letter-spacing: 0.1rem; \n`;\n\nconst Subtitle = styled.h2`\n  font-size: 2.5rem;\n  margin-bottom: 6vh;\n`;\n\nconst ModeSelectContainer = styled.div`\n  display: flex;\n  gap: 10rem;\n  margin-top: 3vh; \n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst Button = styled.button`\n  font-size: 2rem;\n  padding: 2rem 3.5rem;  \n  border-radius: 16px;   \n  border: none;\n  background-color: #333;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #555;\n  }\n\n  &:active {\n    background-color: #111;\n  }\n`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}